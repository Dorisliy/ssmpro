<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.AmazonImportOrderDetailMapper" >
  <resultMap id="BaseResultMap" type="pojo.AmazonImportOrderDetail" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CREATED_AT" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="CREATED_ID" property="createdId" jdbcType="INTEGER" />
    <result column="UPDATED_AT" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="UPDATED_ID" property="updatedId" jdbcType="INTEGER" />
    <result column="STATE" property="state" jdbcType="CHAR" />
    <result column="ISACTIVE" property="isactive" jdbcType="CHAR" />
    <result column="CLIENT_ID" property="clientId" jdbcType="INTEGER" />
    <result column="ORG_ID" property="orgId" jdbcType="INTEGER" />
    <result column="AMAZON_ORDERID" property="amazonOrderid" jdbcType="VARCHAR" />
    <result column="AMAZON_IMPORT_ORDER_LOG_ID" property="amazonImportOrderLogId" jdbcType="INTEGER" />
    <result column="AMAZON_ORDER_ID" property="amazonOrderId" jdbcType="INTEGER" />
    <result column="C_ORDER_ID" property="cOrderId" jdbcType="INTEGER" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="IMPORT_STATUS" property="importStatus" jdbcType="VARCHAR" />
    <result column="IS_IMPORT_ALL" property="isImportAll" jdbcType="CHAR" />
    <result column="IMPORT_FAILORDER_PROCESS" property="importFailorderProcess" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CREATED_AT, CREATED_ID, UPDATED_AT, UPDATED_ID, STATE, ISACTIVE, CLIENT_ID, ORG_ID, 
    AMAZON_ORDERID, AMAZON_IMPORT_ORDER_LOG_ID, AMAZON_ORDER_ID, C_ORDER_ID, DESCRIPTION, 
    IMPORT_STATUS, IS_IMPORT_ALL, IMPORT_FAILORDER_PROCESS
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="pojo.AmazonImportOrderDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from amazon_import_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from amazon_import_order_detail
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from amazon_import_order_detail
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="pojo.AmazonImportOrderDetailExample" >
    delete from amazon_import_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="pojo.AmazonImportOrderDetail" >
    insert into amazon_import_order_detail (ID, CREATED_AT, CREATED_ID, 
      UPDATED_AT, UPDATED_ID, STATE, 
      ISACTIVE, CLIENT_ID, ORG_ID, 
      AMAZON_ORDERID, AMAZON_IMPORT_ORDER_LOG_ID, 
      AMAZON_ORDER_ID, C_ORDER_ID, DESCRIPTION, 
      IMPORT_STATUS, IS_IMPORT_ALL, IMPORT_FAILORDER_PROCESS
      )
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{createdId,jdbcType=INTEGER}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedId,jdbcType=INTEGER}, #{state,jdbcType=CHAR}, 
      #{isactive,jdbcType=CHAR}, #{clientId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER}, 
      #{amazonOrderid,jdbcType=VARCHAR}, #{amazonImportOrderLogId,jdbcType=INTEGER}, 
      #{amazonOrderId,jdbcType=INTEGER}, #{cOrderId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, 
      #{importStatus,jdbcType=VARCHAR}, #{isImportAll,jdbcType=CHAR}, #{importFailorderProcess,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="pojo.AmazonImportOrderDetail" >
    insert into amazon_import_order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="createdAt != null" >
        CREATED_AT,
      </if>
      <if test="createdId != null" >
        CREATED_ID,
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT,
      </if>
      <if test="updatedId != null" >
        UPDATED_ID,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="isactive != null" >
        ISACTIVE,
      </if>
      <if test="clientId != null" >
        CLIENT_ID,
      </if>
      <if test="orgId != null" >
        ORG_ID,
      </if>
      <if test="amazonOrderid != null" >
        AMAZON_ORDERID,
      </if>
      <if test="amazonImportOrderLogId != null" >
        AMAZON_IMPORT_ORDER_LOG_ID,
      </if>
      <if test="amazonOrderId != null" >
        AMAZON_ORDER_ID,
      </if>
      <if test="cOrderId != null" >
        C_ORDER_ID,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="importStatus != null" >
        IMPORT_STATUS,
      </if>
      <if test="isImportAll != null" >
        IS_IMPORT_ALL,
      </if>
      <if test="importFailorderProcess != null" >
        IMPORT_FAILORDER_PROCESS,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdId != null" >
        #{createdId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedId != null" >
        #{updatedId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
      <if test="isactive != null" >
        #{isactive,jdbcType=CHAR},
      </if>
      <if test="clientId != null" >
        #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=INTEGER},
      </if>
      <if test="amazonOrderid != null" >
        #{amazonOrderid,jdbcType=VARCHAR},
      </if>
      <if test="amazonImportOrderLogId != null" >
        #{amazonImportOrderLogId,jdbcType=INTEGER},
      </if>
      <if test="amazonOrderId != null" >
        #{amazonOrderId,jdbcType=INTEGER},
      </if>
      <if test="cOrderId != null" >
        #{cOrderId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="importStatus != null" >
        #{importStatus,jdbcType=VARCHAR},
      </if>
      <if test="isImportAll != null" >
        #{isImportAll,jdbcType=CHAR},
      </if>
      <if test="importFailorderProcess != null" >
        #{importFailorderProcess,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pojo.AmazonImportOrderDetailExample" resultType="java.lang.Integer" >
    select count(*) from amazon_import_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update amazon_import_order_detail
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdId != null" >
        CREATED_ID = #{record.createdId,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        UPDATED_AT = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedId != null" >
        UPDATED_ID = #{record.updatedId,jdbcType=INTEGER},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=CHAR},
      </if>
      <if test="record.isactive != null" >
        ISACTIVE = #{record.isactive,jdbcType=CHAR},
      </if>
      <if test="record.clientId != null" >
        CLIENT_ID = #{record.clientId,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null" >
        ORG_ID = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.amazonOrderid != null" >
        AMAZON_ORDERID = #{record.amazonOrderid,jdbcType=VARCHAR},
      </if>
      <if test="record.amazonImportOrderLogId != null" >
        AMAZON_IMPORT_ORDER_LOG_ID = #{record.amazonImportOrderLogId,jdbcType=INTEGER},
      </if>
      <if test="record.amazonOrderId != null" >
        AMAZON_ORDER_ID = #{record.amazonOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.cOrderId != null" >
        C_ORDER_ID = #{record.cOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.importStatus != null" >
        IMPORT_STATUS = #{record.importStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.isImportAll != null" >
        IS_IMPORT_ALL = #{record.isImportAll,jdbcType=CHAR},
      </if>
      <if test="record.importFailorderProcess != null" >
        IMPORT_FAILORDER_PROCESS = #{record.importFailorderProcess,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update amazon_import_order_detail
    set ID = #{record.id,jdbcType=INTEGER},
      CREATED_AT = #{record.createdAt,jdbcType=TIMESTAMP},
      CREATED_ID = #{record.createdId,jdbcType=INTEGER},
      UPDATED_AT = #{record.updatedAt,jdbcType=TIMESTAMP},
      UPDATED_ID = #{record.updatedId,jdbcType=INTEGER},
      STATE = #{record.state,jdbcType=CHAR},
      ISACTIVE = #{record.isactive,jdbcType=CHAR},
      CLIENT_ID = #{record.clientId,jdbcType=INTEGER},
      ORG_ID = #{record.orgId,jdbcType=INTEGER},
      AMAZON_ORDERID = #{record.amazonOrderid,jdbcType=VARCHAR},
      AMAZON_IMPORT_ORDER_LOG_ID = #{record.amazonImportOrderLogId,jdbcType=INTEGER},
      AMAZON_ORDER_ID = #{record.amazonOrderId,jdbcType=INTEGER},
      C_ORDER_ID = #{record.cOrderId,jdbcType=INTEGER},
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      IMPORT_STATUS = #{record.importStatus,jdbcType=VARCHAR},
      IS_IMPORT_ALL = #{record.isImportAll,jdbcType=CHAR},
      IMPORT_FAILORDER_PROCESS = #{record.importFailorderProcess,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="pojo.AmazonImportOrderDetail" >
    update amazon_import_order_detail
    <set >
      <if test="createdAt != null" >
        CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdId != null" >
        CREATED_ID = #{createdId,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedId != null" >
        UPDATED_ID = #{updatedId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=CHAR},
      </if>
      <if test="isactive != null" >
        ISACTIVE = #{isactive,jdbcType=CHAR},
      </if>
      <if test="clientId != null" >
        CLIENT_ID = #{clientId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null" >
        ORG_ID = #{orgId,jdbcType=INTEGER},
      </if>
      <if test="amazonOrderid != null" >
        AMAZON_ORDERID = #{amazonOrderid,jdbcType=VARCHAR},
      </if>
      <if test="amazonImportOrderLogId != null" >
        AMAZON_IMPORT_ORDER_LOG_ID = #{amazonImportOrderLogId,jdbcType=INTEGER},
      </if>
      <if test="amazonOrderId != null" >
        AMAZON_ORDER_ID = #{amazonOrderId,jdbcType=INTEGER},
      </if>
      <if test="cOrderId != null" >
        C_ORDER_ID = #{cOrderId,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="importStatus != null" >
        IMPORT_STATUS = #{importStatus,jdbcType=VARCHAR},
      </if>
      <if test="isImportAll != null" >
        IS_IMPORT_ALL = #{isImportAll,jdbcType=CHAR},
      </if>
      <if test="importFailorderProcess != null" >
        IMPORT_FAILORDER_PROCESS = #{importFailorderProcess,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="pojo.AmazonImportOrderDetail" >
    update amazon_import_order_detail
    set CREATED_AT = #{createdAt,jdbcType=TIMESTAMP},
      CREATED_ID = #{createdId,jdbcType=INTEGER},
      UPDATED_AT = #{updatedAt,jdbcType=TIMESTAMP},
      UPDATED_ID = #{updatedId,jdbcType=INTEGER},
      STATE = #{state,jdbcType=CHAR},
      ISACTIVE = #{isactive,jdbcType=CHAR},
      CLIENT_ID = #{clientId,jdbcType=INTEGER},
      ORG_ID = #{orgId,jdbcType=INTEGER},
      AMAZON_ORDERID = #{amazonOrderid,jdbcType=VARCHAR},
      AMAZON_IMPORT_ORDER_LOG_ID = #{amazonImportOrderLogId,jdbcType=INTEGER},
      AMAZON_ORDER_ID = #{amazonOrderId,jdbcType=INTEGER},
      C_ORDER_ID = #{cOrderId,jdbcType=INTEGER},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      IMPORT_STATUS = #{importStatus,jdbcType=VARCHAR},
      IS_IMPORT_ALL = #{isImportAll,jdbcType=CHAR},
      IMPORT_FAILORDER_PROCESS = #{importFailorderProcess,jdbcType=CHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>